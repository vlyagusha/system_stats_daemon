// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: SystemStatsService.proto

package internalgrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SystemStatsStreamServiceClient is the client API for SystemStatsStreamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SystemStatsStreamServiceClient interface {
	FetchResponse(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (SystemStatsStreamService_FetchResponseClient, error)
}

type systemStatsStreamServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemStatsStreamServiceClient(cc grpc.ClientConnInterface) SystemStatsStreamServiceClient {
	return &systemStatsStreamServiceClient{cc}
}

func (c *systemStatsStreamServiceClient) FetchResponse(ctx context.Context, in *RequestMessage, opts ...grpc.CallOption) (SystemStatsStreamService_FetchResponseClient, error) {
	stream, err := c.cc.NewStream(ctx, &SystemStatsStreamService_ServiceDesc.Streams[0], "/system_stat_service.SystemStatsStreamService/FetchResponse", opts...)
	if err != nil {
		return nil, err
	}
	x := &systemStatsStreamServiceFetchResponseClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SystemStatsStreamService_FetchResponseClient interface {
	Recv() (*ResponseMessage, error)
	grpc.ClientStream
}

type systemStatsStreamServiceFetchResponseClient struct {
	grpc.ClientStream
}

func (x *systemStatsStreamServiceFetchResponseClient) Recv() (*ResponseMessage, error) {
	m := new(ResponseMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SystemStatsStreamServiceServer is the server API for SystemStatsStreamService service.
// All implementations must embed UnimplementedSystemStatsStreamServiceServer
// for forward compatibility
type SystemStatsStreamServiceServer interface {
	FetchResponse(*RequestMessage, SystemStatsStreamService_FetchResponseServer) error
	mustEmbedUnimplementedSystemStatsStreamServiceServer()
}

// UnimplementedSystemStatsStreamServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSystemStatsStreamServiceServer struct {
}

func (UnimplementedSystemStatsStreamServiceServer) FetchResponse(*RequestMessage, SystemStatsStreamService_FetchResponseServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchResponse not implemented")
}
func (UnimplementedSystemStatsStreamServiceServer) mustEmbedUnimplementedSystemStatsStreamServiceServer() {
}

// UnsafeSystemStatsStreamServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SystemStatsStreamServiceServer will
// result in compilation errors.
type UnsafeSystemStatsStreamServiceServer interface {
	mustEmbedUnimplementedSystemStatsStreamServiceServer()
}

func RegisterSystemStatsStreamServiceServer(s grpc.ServiceRegistrar, srv SystemStatsStreamServiceServer) {
	s.RegisterService(&SystemStatsStreamService_ServiceDesc, srv)
}

func _SystemStatsStreamService_FetchResponse_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SystemStatsStreamServiceServer).FetchResponse(m, &systemStatsStreamServiceFetchResponseServer{stream})
}

type SystemStatsStreamService_FetchResponseServer interface {
	Send(*ResponseMessage) error
	grpc.ServerStream
}

type systemStatsStreamServiceFetchResponseServer struct {
	grpc.ServerStream
}

func (x *systemStatsStreamServiceFetchResponseServer) Send(m *ResponseMessage) error {
	return x.ServerStream.SendMsg(m)
}

// SystemStatsStreamService_ServiceDesc is the grpc.ServiceDesc for SystemStatsStreamService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SystemStatsStreamService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "system_stat_service.SystemStatsStreamService",
	HandlerType: (*SystemStatsStreamServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchResponse",
			Handler:       _SystemStatsStreamService_FetchResponse_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "SystemStatsService.proto",
}
